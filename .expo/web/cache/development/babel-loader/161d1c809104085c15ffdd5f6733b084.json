{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { Colors, FONTS } from \"../theme\";\nimport { getScreenPercent, setUser } from \"../utils\";\nimport { Alert, Button } from \"../components\";\nimport { Screens } from \"../navigations\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { firebase } from \"../firebase\";\nimport GlassX from \"glassx\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Signup = function Signup(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isError = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var signupSchema = Yup.object().shape({\n    fullname: Yup.string().required(\"Fullname is required\"),\n    password: Yup.string().min(5, \"Enter minimum of 5 characters\").required(\"Password is required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n    phoneNumber: Yup.string().min(9, \"Invalid phone number\").required(\"Phone number is required\")\n  });\n  return _jsx(KeyboardAwareScrollView, {\n    contentContainerStyle: styles.container,\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    scrollEnabled: false,\n    children: _jsxs(SafeAreaView, {\n      edges: [\"top\"],\n      children: [_jsx(View, {\n        style: {\n          alignItems: \"center\",\n          height: \"22%\",\n          justifyContent: \"center\"\n        },\n        children: _jsx(Image, {\n          source: require(\"../assets/Logo-black.png\"),\n          resizeMode: \"contain\",\n          style: {\n            height: 80\n          }\n        })\n      }), _jsx(Formik, {\n        initialValues: {\n          email: \"\",\n          fullname: \"\",\n          password: \"\",\n          phoneNumber: \"\"\n        },\n        validationSchema: signupSchema,\n        onSubmit: function _callee(values, _ref2) {\n          var resetForm, usersRef, snapShot, res, uid, data, message;\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  resetForm = _ref2.resetForm;\n                  _context.prev = 1;\n                  setLoading(true);\n                  usersRef = firebase.firestore().collection(\"users\");\n                  _context.next = 6;\n                  return _regeneratorRuntime.awrap(usersRef.where(\"phoneNumber\", \"==\", \"233\" + values.phoneNumber).get());\n\n                case 6:\n                  snapShot = _context.sent;\n\n                  if (snapShot.empty) {\n                    _context.next = 9;\n                    break;\n                  }\n\n                  throw new Error(\"auth/phone-already-in-use\");\n\n                case 9:\n                  _context.next = 11;\n                  return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(values.email, values.password));\n\n                case 11:\n                  res = _context.sent;\n                  uid = res.user.uid;\n                  data = _objectSpread(_objectSpread({\n                    id: uid\n                  }, values), {}, {\n                    phoneNumber: \"233\" + values.phoneNumber,\n                    status: \"inactive\",\n                    step: 1,\n                    createdAt: firebase.firestore.Timestamp.fromDate(new Date()),\n                    updatedAt: firebase.firestore.Timestamp.fromDate(new Date())\n                  });\n                  _context.next = 16;\n                  return _regeneratorRuntime.awrap(usersRef.doc(uid).set(data));\n\n                case 16:\n                  resetForm();\n                  setLoading(false);\n                  GlassX.set({\n                    step: 1,\n                    displaySuccess: true,\n                    user: data\n                  });\n                  _context.next = 21;\n                  return _regeneratorRuntime.awrap(setUser(data));\n\n                case 21:\n                  navigation.navigate(Screens.APPLICATION);\n                  _context.next = 31;\n                  break;\n\n                case 24:\n                  _context.prev = 24;\n                  _context.t0 = _context[\"catch\"](1);\n                  console.log(_context.t0);\n                  setError(true);\n                  message = _context.t0.code === \"auth/email-already-in-use\" ? \"ðŸ¥µ Email is already in use\" : _context.t0.message == \"auth/phone-already-in-use\" ? \"ðŸ¥µ Phone number is already in use\" : \"ðŸ¥µ Something went wrong\";\n                  setErrorMessage(message);\n                  setLoading(false);\n\n                case 31:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, [[1, 24]], Promise);\n        },\n        children: function children(_ref3) {\n          var handleBlur = _ref3.handleBlur,\n              handleChange = _ref3.handleChange,\n              handleSubmit = _ref3.handleSubmit,\n              errors = _ref3.errors,\n              values = _ref3.values,\n              touched = _ref3.touched;\n          return _jsxs(View, {\n            style: styles.formContainer,\n            children: [_jsx(View, {\n              style: {\n                alignItems: \"center\"\n              },\n              children: _jsx(Text, {\n                style: _objectSpread(_objectSpread({}, styles.label), {}, {\n                  fontSize: getScreenPercent(10),\n                  marginBottom: \"6%\"\n                }),\n                children: \"Signup\"\n              })\n            }), isError && _jsx(Alert, {\n              type: \"error\",\n              text: errorMessage\n            }), _jsx(Text, {\n              style: styles.label,\n              children: \"Full Name\"\n            }), _jsxs(View, {\n              style: styles.inputContainer,\n              children: [_jsx(View, {\n                style: styles.input,\n                children: _jsx(TextInput, {\n                  style: {\n                    flex: 1,\n                    borderWidth: 0\n                  },\n                  onBlur: handleBlur(\"fullname\"),\n                  value: values.fullname,\n                  textContentType: \"name\",\n                  onChangeText: handleChange(\"fullname\")\n                })\n              }), errors.fullname && touched.fullname ? _jsx(Text, {\n                style: styles.errorStyle,\n                children: errors.fullname\n              }) : null]\n            }), _jsxs(View, {\n              style: styles.inputContainer,\n              children: [_jsx(Text, {\n                style: styles.label,\n                children: \"Email\"\n              }), _jsx(View, {\n                style: styles.input,\n                children: _jsx(TextInput, {\n                  style: {\n                    flex: 1,\n                    borderWidth: 0\n                  },\n                  keyboardType: \"email-address\",\n                  value: values.email,\n                  textContentType: \"emailAddress\",\n                  onBlur: handleBlur(\"email\"),\n                  autoCapitalize: \"none\",\n                  onChangeText: function onChangeText(text) {\n                    setError(false);\n                    handleChange(\"email\")(text);\n                  }\n                })\n              }), errors.email && touched.email ? _jsx(Text, {\n                style: styles.errorStyle,\n                children: errors.email\n              }) : null]\n            }), _jsxs(View, {\n              style: styles.inputContainer,\n              children: [_jsx(Text, {\n                style: styles.label,\n                children: \"Password\"\n              }), _jsx(View, {\n                style: styles.input,\n                children: _jsx(TextInput, {\n                  style: {\n                    flex: 1,\n                    borderWidth: 0\n                  },\n                  textContentType: \"newPassword\",\n                  secureTextEntry: true,\n                  value: values.password,\n                  onBlur: handleBlur(\"password\"),\n                  onChangeText: handleChange(\"password\")\n                })\n              }), errors.password && touched.password ? _jsx(Text, {\n                style: styles.errorStyle,\n                children: errors.password\n              }) : null]\n            }), _jsxs(View, {\n              style: styles.inputContainer,\n              children: [_jsx(Text, {\n                style: styles.label,\n                children: \"Phone Number\"\n              }), _jsxs(View, {\n                style: [styles.input, styles.phoneInput],\n                children: [_jsx(Text, {\n                  style: [styles.label, {\n                    marginRight: getScreenPercent(2)\n                  }],\n                  children: \"+233\"\n                }), _jsx(TextInput, {\n                  style: {\n                    flex: 1,\n                    borderWidth: 0\n                  },\n                  value: values.phoneNumber,\n                  keyboardType: \"phone-pad\",\n                  maxLength: 9,\n                  textContentType: \"telephoneNumber\",\n                  onBlur: handleBlur(\"phoneNumber\"),\n                  onChangeText: handleChange(\"phoneNumber\")\n                })]\n              }), errors.phoneNumber && touched.phoneNumber ? _jsx(Text, {\n                style: styles.errorStyle,\n                children: errors.phoneNumber\n              }) : null]\n            }), _jsx(Button, {\n              title: \"Signup\",\n              spinnerStyle: {\n                color: Colors.PRIMARY\n              },\n              loading: loading,\n              textStyle: {\n                fontSize: 16,\n                color: \"white\"\n              },\n              style: styles.button,\n              onPress: handleSubmit\n            }), _jsx(View, {\n              style: {\n                alignItems: \"center\",\n                marginTop: \"5%\"\n              },\n              children: _jsxs(View, {\n                style: {\n                  flexDirection: \"row\"\n                },\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"Have an account?\"\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return navigation.navigate(Screens.LOGIN);\n                  },\n                  children: _jsx(Text, {\n                    style: _objectSpread(_objectSpread({}, styles.label), {}, {\n                      marginLeft: 5\n                    }),\n                    children: \"Login\"\n                  })\n                })]\n              })\n            })]\n          });\n        }\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.PRIMARY\n  },\n  formContainer: {\n    paddingHorizontal: \"8%\"\n  },\n  label: {\n    fontFamily: FONTS.WORK_SANS_MEDIUM,\n    fontSize: 16\n  },\n  button: {\n    borderColor: Colors.SECONDARY,\n    width: \"100%\",\n    backgroundColor: Colors.SECONDARY,\n    height: \"9%\",\n    marginVertical: getScreenPercent(2.3)\n  },\n  phoneInput: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  inputContainer: {\n    marginBottom: \"2%\",\n    marginTop: \"1%\"\n  },\n  errorStyle: {\n    color: \"red\"\n  },\n  input: {\n    borderBottomColor: Colors.SECONDARY,\n    borderWidth: 1.5,\n    height: getScreenPercent(12.5),\n    width: \"100%\",\n    borderRadius: 10,\n    marginTop: \"2%\",\n    flexDirection: \"row\",\n    paddingBottom: getScreenPercent(0.4),\n    paddingHorizontal: getScreenPercent(4),\n    justifyContent: \"space-between\",\n    marginBottom: 2\n  }\n});","map":{"version":3,"sources":["/Users/cosmos/Projects/lenda/screens/Signup.jsx"],"names":["React","useState","SafeAreaView","KeyboardAwareScrollView","Colors","FONTS","getScreenPercent","setUser","Alert","Button","Screens","Formik","Yup","firebase","GlassX","Signup","navigation","loading","setLoading","isError","setError","errorMessage","setErrorMessage","signupSchema","object","shape","fullname","string","required","password","min","email","phoneNumber","styles","container","x","y","alignItems","height","justifyContent","require","values","resetForm","usersRef","firestore","collection","where","get","snapShot","empty","Error","auth","createUserWithEmailAndPassword","res","uid","user","data","id","status","step","createdAt","Timestamp","fromDate","Date","updatedAt","doc","set","displaySuccess","navigate","APPLICATION","console","log","message","code","handleBlur","handleChange","handleSubmit","errors","touched","formContainer","label","fontSize","marginBottom","inputContainer","input","flex","borderWidth","errorStyle","text","phoneInput","marginRight","color","PRIMARY","button","marginTop","flexDirection","LOGIN","marginLeft","StyleSheet","create","backgroundColor","paddingHorizontal","fontFamily","WORK_SANS_MEDIUM","borderColor","SECONDARY","width","marginVertical","borderBottomColor","borderRadius","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Image,\n  Text,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { Colors, FONTS } from \"../theme\";\nimport { getScreenPercent, setUser } from \"../utils\";\nimport { Alert, Button } from \"../components\";\nimport { Screens } from \"../navigations\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { firebase } from \"../firebase\";\nimport GlassX from \"glassx\";\n\nexport const Signup = ({ navigation }) => {\n  const [loading, setLoading] = useState();\n  const [isError, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  const signupSchema = Yup.object().shape({\n    fullname: Yup.string().required(\"Fullname is required\"),\n    password: Yup.string()\n      .min(5, \"Enter minimum of 5 characters\")\n      .required(\"Password is required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n    phoneNumber: Yup.string()\n      .min(9, \"Invalid phone number\")\n      .required(\"Phone number is required\"),\n  });\n\n  return (\n    <KeyboardAwareScrollView\n      contentContainerStyle={styles.container}\n      resetScrollToCoords={{ x: 0, y: 0 }}\n      scrollEnabled={false}\n    >\n      <SafeAreaView edges={[\"top\"]}>\n        <View\n          style={{\n            alignItems: \"center\",\n            height: \"22%\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Image\n            source={require(\"../assets/Logo-black.png\")}\n            resizeMode=\"contain\"\n            style={{ height: 80 }}\n          />\n        </View>\n        <Formik\n          initialValues={{\n            email: \"\",\n            fullname: \"\",\n            password: \"\",\n            phoneNumber: \"\",\n          }}\n          validationSchema={signupSchema}\n          onSubmit={async (values, { resetForm }) => {\n            try {\n              setLoading(true);\n              const usersRef = firebase.firestore().collection(\"users\");\n              const snapShot = await usersRef\n                .where(\"phoneNumber\", \"==\", `233${values.phoneNumber}`)\n                .get();\n\n              if (!snapShot.empty) {\n                throw new Error(\"auth/phone-already-in-use\");\n              }\n              const res = await firebase\n                .auth()\n                .createUserWithEmailAndPassword(values.email, values.password);\n              const uid = res.user.uid;\n              const data = {\n                id: uid,\n                ...values,\n                phoneNumber: `233${values.phoneNumber}`,\n                status: \"inactive\",\n                step: 1,\n                createdAt: firebase.firestore.Timestamp.fromDate(new Date()),\n                updatedAt: firebase.firestore.Timestamp.fromDate(new Date()),\n              };\n\n              await usersRef.doc(uid).set(data);\n              resetForm();\n              setLoading(false);\n              GlassX.set({ step: 1, displaySuccess: true, user: data });\n              await setUser(data);\n              navigation.navigate(Screens.APPLICATION);\n            } catch (err) {\n              console.log(err);\n\n              setError(true);\n              const message =\n                err.code === \"auth/email-already-in-use\"\n                  ? \"ðŸ¥µ Email is already in use\"\n                  : err.message == \"auth/phone-already-in-use\"\n                  ? \"ðŸ¥µ Phone number is already in use\"\n                  : \"ðŸ¥µ Something went wrong\";\n\n              setErrorMessage(message);\n              setLoading(false);\n            }\n          }}\n        >\n          {({\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            errors,\n            values,\n            touched,\n          }) => (\n            <View style={styles.formContainer}>\n              <View style={{ alignItems: \"center\" }}>\n                <Text\n                  style={{\n                    ...styles.label,\n                    fontSize: getScreenPercent(10),\n                    marginBottom: \"6%\",\n                  }}\n                >\n                  Signup\n                </Text>\n              </View>\n              {isError && <Alert type={\"error\"} text={errorMessage} />}\n              <Text style={styles.label}>Full Name</Text>\n              <View style={styles.inputContainer}>\n                <View style={styles.input}>\n                  <TextInput\n                    style={{ flex: 1, borderWidth: 0 }}\n                    onBlur={handleBlur(\"fullname\")}\n                    value={values.fullname}\n                    textContentType=\"name\"\n                    onChangeText={handleChange(\"fullname\")}\n                  />\n                </View>\n                {errors.fullname && touched.fullname ? (\n                  <Text style={styles.errorStyle}>{errors.fullname}</Text>\n                ) : null}\n              </View>\n              <View style={styles.inputContainer}>\n                <Text style={styles.label}>Email</Text>\n                <View style={styles.input}>\n                  <TextInput\n                    style={{ flex: 1, borderWidth: 0 }}\n                    keyboardType={\"email-address\"}\n                    value={values.email}\n                    textContentType=\"emailAddress\"\n                    onBlur={handleBlur(\"email\")}\n                    autoCapitalize={\"none\"}\n                    onChangeText={(text) => {\n                      setError(false);\n                      handleChange(\"email\")(text);\n                    }}\n                  />\n                </View>\n                {errors.email && touched.email ? (\n                  <Text style={styles.errorStyle}>{errors.email}</Text>\n                ) : null}\n              </View>\n              <View style={styles.inputContainer}>\n                <Text style={styles.label}>Password</Text>\n                <View style={styles.input}>\n                  <TextInput\n                    style={{ flex: 1, borderWidth: 0 }}\n                    textContentType=\"newPassword\"\n                    secureTextEntry={true}\n                    value={values.password}\n                    onBlur={handleBlur(\"password\")}\n                    onChangeText={handleChange(\"password\")}\n                  />\n                </View>\n                {errors.password && touched.password ? (\n                  <Text style={styles.errorStyle}>{errors.password}</Text>\n                ) : null}\n              </View>\n              <View style={styles.inputContainer}>\n                <Text style={styles.label}>Phone Number</Text>\n                <View style={[styles.input, styles.phoneInput]}>\n                  <Text\n                    style={[styles.label, { marginRight: getScreenPercent(2) }]}\n                  >\n                    +233\n                  </Text>\n                  <TextInput\n                    style={{ flex: 1, borderWidth: 0 }}\n                    value={values.phoneNumber}\n                    keyboardType={\"phone-pad\"}\n                    maxLength={9}\n                    textContentType={\"telephoneNumber\"}\n                    onBlur={handleBlur(\"phoneNumber\")}\n                    onChangeText={handleChange(\"phoneNumber\")}\n                  />\n                </View>\n                {errors.phoneNumber && touched.phoneNumber ? (\n                  <Text style={styles.errorStyle}>{errors.phoneNumber}</Text>\n                ) : null}\n              </View>\n\n              <Button\n                title={\"Signup\"}\n                spinnerStyle={{ color: Colors.PRIMARY }}\n                loading={loading}\n                textStyle={{ fontSize: 16, color: \"white\" }}\n                style={styles.button}\n                onPress={handleSubmit}\n              />\n              <View style={{ alignItems: \"center\", marginTop: \"5%\" }}>\n                <View style={{ flexDirection: \"row\" }}>\n                  <Text style={styles.label}>Have an account?</Text>\n                  <TouchableOpacity\n                    onPress={() => navigation.navigate(Screens.LOGIN)}\n                  >\n                    <Text style={{ ...styles.label, marginLeft: 5 }}>\n                      Login\n                    </Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </View>\n          )}\n        </Formik>\n      </SafeAreaView>\n    </KeyboardAwareScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.PRIMARY,\n  },\n  formContainer: {\n    paddingHorizontal: \"8%\",\n  },\n  label: {\n    fontFamily: FONTS.WORK_SANS_MEDIUM,\n    fontSize: 16,\n  },\n  button: {\n    borderColor: Colors.SECONDARY,\n    width: \"100%\",\n    backgroundColor: Colors.SECONDARY,\n    height: \"9%\",\n    marginVertical: getScreenPercent(2.3),\n  },\n  phoneInput: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  inputContainer: {\n    marginBottom: \"2%\",\n    marginTop: \"1%\",\n  },\n  errorStyle: {\n    color: \"red\",\n  },\n  input: {\n    borderBottomColor: Colors.SECONDARY,\n    borderWidth: 1.5,\n    height: getScreenPercent(12.5),\n    width: \"100%\",\n    borderRadius: 10,\n    marginTop: \"2%\",\n    flexDirection: \"row\",\n    paddingBottom: getScreenPercent(0.4),\n    paddingHorizontal: getScreenPercent(4),\n    justifyContent: \"space-between\",\n    marginBottom: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}