{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { Colors, FONTS } from \"../theme\";\nimport { getScreenPercent, setUser } from \"../utils\";\nimport { Alert, Button } from \"../components\";\nimport { Screens } from \"../navigations\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { firebase } from \"../firebase\";\nimport GlassX from \"glassx\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Login = function Login(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isError = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var navigation = useNavigation();\n  var loginSchema = Yup.object().shape({\n    password: Yup.string().min(5, \"Enter minimum of 5 characters\").required(\"Password is required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\")\n  });\n  return _jsx(KeyboardAwareScrollView, {\n    contentContainerStyle: styles.container,\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    scrollEnabled: false,\n    children: _jsxs(SafeAreaView, {\n      edges: [\"top\"],\n      children: [_jsx(View, {\n        style: {\n          alignItems: \"center\",\n          height: \"35%\",\n          justifyContent: \"center\"\n        },\n        children: _jsx(Image, {\n          source: require(\"../assets/Logo-black.png\"),\n          resizeMode: \"contain\",\n          style: {\n            height: 80\n          }\n        })\n      }), _jsx(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        onSubmit: function _callee(values, _ref2) {\n          var resetForm, res, uid, usersRef, doc, userData, message;\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  resetForm = _ref2.resetForm;\n                  setLoading(true);\n                  _context.prev = 2;\n                  _context.next = 5;\n                  return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(values.email, values.password));\n\n                case 5:\n                  res = _context.sent;\n                  uid = res.user.uid;\n                  usersRef = firebase.firestore().collection(\"users\");\n                  _context.next = 10;\n                  return _regeneratorRuntime.awrap(usersRef.doc(uid).get());\n\n                case 10:\n                  doc = _context.sent;\n                  userData = doc.data();\n                  GlassX.set({\n                    step: userData.step,\n                    displaySuccess: false,\n                    user: userData\n                  });\n                  _context.next = 15;\n                  return _regeneratorRuntime.awrap(setUser(userData));\n\n                case 15:\n                  if (userData.status === \"inactive\") navigation.navigate(Screens.APPLICATION);\n                  if (userData.status === \"approved\") navigation.navigate(Screens.HOME);\n                  resetForm();\n                  setLoading(false);\n                  _context.next = 28;\n                  break;\n\n                case 21:\n                  _context.prev = 21;\n                  _context.t0 = _context[\"catch\"](2);\n                  console.log(_context.t0);\n                  setError(true);\n                  message = _context.t0.code === \"auth/user-not-found\" ? \"ðŸ¥µ Account does not exist\" : _context.t0.code === \"auth/wrong-password\" ? \"ðŸ¥µ Your password is incorrect\" : \"ðŸ¥µ Somethin went wrong\";\n                  setErrorMessage(message);\n                  setLoading(false);\n\n                case 28:\n                  setLoading(false);\n\n                case 29:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, [[2, 21]], Promise);\n        },\n        validationSchema: loginSchema,\n        children: function children(_ref3) {\n          var handleBlur = _ref3.handleBlur,\n              handleChange = _ref3.handleChange,\n              handleSubmit = _ref3.handleSubmit,\n              errors = _ref3.errors,\n              values = _ref3.values,\n              touched = _ref3.touched;\n          return _jsxs(View, {\n            style: styles.formContainer,\n            children: [_jsx(View, {\n              style: {\n                alignItems: \"center\"\n              },\n              children: _jsx(Text, {\n                style: _objectSpread(_objectSpread({}, styles.label), {}, {\n                  fontSize: getScreenPercent(10),\n                  marginBottom: \"8%\"\n                }),\n                children: \"Login\"\n              })\n            }), isError && _jsx(Alert, {\n              text: errorMessage,\n              type: \"error\"\n            }), _jsxs(View, {\n              style: styles.inputContainer,\n              children: [_jsx(Text, {\n                style: styles.label,\n                children: \"Email\"\n              }), _jsx(View, {\n                style: styles.input,\n                children: _jsx(TextInput, {\n                  style: {\n                    flex: 1,\n                    borderWidth: 0\n                  },\n                  keyboardType: \"email-address\",\n                  value: values.email,\n                  onBlur: handleBlur(\"email\"),\n                  autoCapitalize: \"none\",\n                  textContentType: \"emailAddress\",\n                  onChangeText: function onChangeText(text) {\n                    handleChange(\"email\")(text);\n                    setError(false);\n                  }\n                })\n              }), errors.email && touched.email ? _jsx(Text, {\n                style: styles.errorStyle,\n                children: errors.email\n              }) : null]\n            }), _jsxs(View, {\n              style: styles.inputContainer,\n              children: [_jsx(Text, {\n                style: styles.label,\n                children: \"Password\"\n              }), _jsx(View, {\n                style: styles.input,\n                children: _jsx(TextInput, {\n                  style: {\n                    flex: 1,\n                    borderWidth: 0\n                  },\n                  textContentType: \"password\",\n                  secureTextEntry: true,\n                  value: values.password,\n                  onBlur: handleBlur(\"password\"),\n                  onChangeText: function onChangeText(text) {\n                    handleChange(\"password\")(text);\n                    setError(false);\n                  }\n                })\n              }), errors.password && touched.password ? _jsx(Text, {\n                style: styles.errorStyle,\n                children: errors.password\n              }) : null]\n            }), _jsx(Button, {\n              title: \"Login\",\n              spinnerStyle: {\n                color: Colors.PRIMARY\n              },\n              loading: loading,\n              textStyle: {\n                fontSize: 16,\n                color: \"white\"\n              },\n              style: styles.button,\n              onPress: handleSubmit\n            }), _jsx(View, {\n              style: {\n                alignItems: \"center\",\n                marginTop: \"5%\"\n              },\n              children: _jsxs(View, {\n                style: {\n                  flexDirection: \"row\"\n                },\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"Dont have an account?\"\n                }), _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return navigation.navigate(Screens.SIGNUP);\n                  },\n                  children: _jsx(Text, {\n                    style: _objectSpread(_objectSpread({}, styles.label), {}, {\n                      marginLeft: 5\n                    }),\n                    children: \"Signup\"\n                  })\n                })]\n              })\n            })]\n          });\n        }\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.PRIMARY\n  },\n  formContainer: {\n    paddingHorizontal: \"8%\"\n  },\n  label: {\n    fontFamily: FONTS.WORK_SANS_MEDIUM,\n    fontSize: 16\n  },\n  button: {\n    borderColor: Colors.SECONDARY,\n    width: \"100%\",\n    backgroundColor: Colors.SECONDARY,\n    height: \"14%\",\n    marginVertical: getScreenPercent(2.3)\n  },\n  errorStyle: {\n    color: \"red\"\n  },\n  inputContainer: {\n    marginBottom: \"2%\",\n    marginTop: \"1%\"\n  },\n  errorStyle: {\n    color: \"red\"\n  },\n  input: {\n    borderBottomColor: Colors.SECONDARY,\n    borderWidth: 1.5,\n    height: getScreenPercent(12.5),\n    width: \"100%\",\n    borderRadius: 10,\n    marginTop: \"2%\",\n    flexDirection: \"row\",\n    paddingBottom: getScreenPercent(0.4),\n    paddingHorizontal: getScreenPercent(4),\n    justifyContent: \"space-between\",\n    marginBottom: 2\n  }\n});","map":{"version":3,"sources":["/Users/cosmos/Projects/lenda/screens/Login.jsx"],"names":["React","useState","SafeAreaView","KeyboardAwareScrollView","Colors","FONTS","getScreenPercent","setUser","Alert","Button","Screens","Formik","Yup","firebase","GlassX","useNavigation","Login","loading","setLoading","isError","setError","errorMessage","setErrorMessage","navigation","loginSchema","object","shape","password","string","min","required","email","styles","container","x","y","alignItems","height","justifyContent","require","values","resetForm","auth","signInWithEmailAndPassword","res","uid","user","usersRef","firestore","collection","doc","get","userData","data","set","step","displaySuccess","status","navigate","APPLICATION","HOME","console","log","message","code","handleBlur","handleChange","handleSubmit","errors","touched","formContainer","label","fontSize","marginBottom","inputContainer","input","flex","borderWidth","text","errorStyle","color","PRIMARY","button","marginTop","flexDirection","SIGNUP","marginLeft","StyleSheet","create","backgroundColor","paddingHorizontal","fontFamily","WORK_SANS_MEDIUM","borderColor","SECONDARY","width","marginVertical","borderBottomColor","borderRadius","paddingBottom"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AASA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,uBAAT,QAAwC,yCAAxC;AACA,SAASC,MAAT,EAAiBC,KAAjB;AACA,SAASC,gBAAT,EAA2BC,OAA3B;AACA,SAASC,KAAT,EAAgBC,MAAhB;AACA,SAASC,OAAT;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,QAAT;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAQ;AAAA;;AAC3B,kBAA8Bf,QAAQ,EAAtC;AAAA;AAAA,MAAOgB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA4BjB,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOkB,OAAP;AAAA,MAAgBC,QAAhB;;AACA,mBAAwCnB,QAAQ,EAAhD;AAAA;AAAA,MAAOoB,YAAP;AAAA,MAAqBC,eAArB;;AACA,MAAMC,UAAU,GAAGR,aAAa,EAAhC;AACA,MAAMS,WAAW,GAAGZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AACrCC,IAAAA,QAAQ,EAAEf,GAAG,CAACgB,MAAJ,GACPC,GADO,CACH,CADG,EACA,+BADA,EAEPC,QAFO,CAEE,sBAFF,CAD2B;AAIrCC,IAAAA,KAAK,EAAEnB,GAAG,CAACgB,MAAJ,GAAaG,KAAb,CAAmB,eAAnB,EAAoCD,QAApC,CAA6C,mBAA7C;AAJ8B,GAAnB,CAApB;AAOA,SACE,KAAC,uBAAD;AACE,IAAA,qBAAqB,EAAEE,MAAM,CAACC,SADhC;AAEE,IAAA,mBAAmB,EAAE;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAFvB;AAGE,IAAA,aAAa,EAAE,KAHjB;AAAA,cAKE,MAAC,YAAD;AAAc,MAAA,KAAK,EAAE,CAAC,KAAD,CAArB;AAAA,iBACE,KAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,QADP;AAELC,UAAAA,MAAM,EAAE,KAFH;AAGLC,UAAAA,cAAc,EAAE;AAHX,SADT;AAAA,kBAOE,KAAC,KAAD;AACE,UAAA,MAAM,EAAEC,OAAO,4BADjB;AAEE,UAAA,UAAU,EAAC,SAFb;AAGE,UAAA,KAAK,EAAE;AAAEF,YAAAA,MAAM,EAAE;AAAV;AAHT;AAPF,QADF,EAcE,KAAC,MAAD;AACE,QAAA,aAAa,EAAE;AACbN,UAAAA,KAAK,EAAE,EADM;AAEbJ,UAAAA,QAAQ,EAAE;AAFG,SADjB;AAKE,QAAA,QAAQ,EAAE,iBAAOa,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,kBAAAA,SAAjB,SAAiBA,SAAjB;AACRvB,kBAAAA,UAAU,CAAC,IAAD,CAAV;AADQ;AAAA;AAAA,mDAGYL,QAAQ,CACvB6B,IADe,GAEfC,0BAFe,CAEYH,MAAM,CAACT,KAFnB,EAE0BS,MAAM,CAACb,QAFjC,CAHZ;;AAAA;AAGAiB,kBAAAA,GAHA;AAMAC,kBAAAA,GANA,GAMMD,GAAG,CAACE,IAAJ,CAASD,GANf;AAOAE,kBAAAA,QAPA,GAOWlC,QAAQ,CAACmC,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAPX;AAAA;AAAA,mDAQYF,QAAQ,CAACG,GAAT,CAAaL,GAAb,EAAkBM,GAAlB,EARZ;;AAAA;AAQAD,kBAAAA,GARA;AASAE,kBAAAA,QATA,GASWF,GAAG,CAACG,IAAJ,EATX;AAUNvC,kBAAAA,MAAM,CAACwC,GAAP,CAAW;AACTC,oBAAAA,IAAI,EAAEH,QAAQ,CAACG,IADN;AAETC,oBAAAA,cAAc,EAAE,KAFP;AAGTV,oBAAAA,IAAI,EAAEM;AAHG,mBAAX;AAVM;AAAA,mDAeA7C,OAAO,CAAC6C,QAAD,CAfP;;AAAA;AAgBN,sBAAIA,QAAQ,CAACK,MAAT,KAAoB,UAAxB,EACElC,UAAU,CAACmC,QAAX,CAAoBhD,OAAO,CAACiD,WAA5B;AACF,sBAAIP,QAAQ,CAACK,MAAT,KAAoB,UAAxB,EACElC,UAAU,CAACmC,QAAX,CAAoBhD,OAAO,CAACkD,IAA5B;AACFnB,kBAAAA,SAAS;AACTvB,kBAAAA,UAAU,CAAC,KAAD,CAAV;AArBM;AAAA;;AAAA;AAAA;AAAA;AAuBN2C,kBAAAA,OAAO,CAACC,GAAR;AACA1C,kBAAAA,QAAQ,CAAC,IAAD,CAAR;AACM2C,kBAAAA,OAzBA,GA0BJ,YAAIC,IAAJ,KAAa,qBAAb,GACI,2BADJ,GAEI,YAAIA,IAAJ,KAAa,qBAAb,GACA,+BADA,GAEA,wBA9BA;AAgCN1C,kBAAAA,eAAe,CAACyC,OAAD,CAAf;AACA7C,kBAAAA,UAAU,CAAC,KAAD,CAAV;;AAjCM;AAmCRA,kBAAAA,UAAU,CAAC,KAAD,CAAV;;AAnCQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALZ;AA0CE,QAAA,gBAAgB,EAAEM,WA1CpB;AAAA,kBA4CG;AAAA,cACCyC,UADD,SACCA,UADD;AAAA,cAECC,YAFD,SAECA,YAFD;AAAA,cAGCC,YAHD,SAGCA,YAHD;AAAA,cAICC,MAJD,SAICA,MAJD;AAAA,cAKC5B,MALD,SAKCA,MALD;AAAA,cAMC6B,OAND,SAMCA,OAND;AAAA,iBAQC,MAAC,IAAD;AAAM,YAAA,KAAK,EAAErC,MAAM,CAACsC,aAApB;AAAA,uBACE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAElC,gBAAAA,UAAU,EAAE;AAAd,eAAb;AAAA,wBACE,KAAC,IAAD;AACE,gBAAA,KAAK,kCACAJ,MAAM,CAACuC,KADP;AAEHC,kBAAAA,QAAQ,EAAElE,gBAAgB,CAAC,EAAD,CAFvB;AAGHmE,kBAAAA,YAAY,EAAE;AAHX,kBADP;AAAA;AAAA;AADF,cADF,EAYGtD,OAAO,IAAI,KAAC,KAAD;AAAO,cAAA,IAAI,EAAEE,YAAb;AAA2B,cAAA,IAAI,EAAC;AAAhC,cAZd,EAaE,MAAC,IAAD;AAAM,cAAA,KAAK,EAAEW,MAAM,CAAC0C,cAApB;AAAA,yBACE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE1C,MAAM,CAACuC,KAApB;AAAA;AAAA,gBADF,EAEE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAEvC,MAAM,CAAC2C,KAApB;AAAA,0BACE,KAAC,SAAD;AACE,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,IAAI,EAAE,CAAR;AAAWC,oBAAAA,WAAW,EAAE;AAAxB,mBADT;AAEE,kBAAA,YAAY,EAAE,eAFhB;AAGE,kBAAA,KAAK,EAAErC,MAAM,CAACT,KAHhB;AAIE,kBAAA,MAAM,EAAEkC,UAAU,CAAC,OAAD,CAJpB;AAKE,kBAAA,cAAc,EAAE,MALlB;AAME,kBAAA,eAAe,EAAC,cANlB;AAOE,kBAAA,YAAY,EAAE,sBAACa,IAAD,EAAU;AACtBZ,oBAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsBY,IAAtB;AACA1D,oBAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AAVH;AADF,gBAFF,EAgBGgD,MAAM,CAACrC,KAAP,IAAgBsC,OAAO,CAACtC,KAAxB,GACC,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAEC,MAAM,CAAC+C,UAApB;AAAA,0BAAiCX,MAAM,CAACrC;AAAxC,gBADD,GAEG,IAlBN;AAAA,cAbF,EAiCE,MAAC,IAAD;AAAM,cAAA,KAAK,EAAEC,MAAM,CAAC0C,cAApB;AAAA,yBACE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE1C,MAAM,CAACuC,KAApB;AAAA;AAAA,gBADF,EAEE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAEvC,MAAM,CAAC2C,KAApB;AAAA,0BACE,KAAC,SAAD;AACE,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,IAAI,EAAE,CAAR;AAAWC,oBAAAA,WAAW,EAAE;AAAxB,mBADT;AAEE,kBAAA,eAAe,EAAC,UAFlB;AAGE,kBAAA,eAAe,EAAE,IAHnB;AAIE,kBAAA,KAAK,EAAErC,MAAM,CAACb,QAJhB;AAKE,kBAAA,MAAM,EAAEsC,UAAU,CAAC,UAAD,CALpB;AAME,kBAAA,YAAY,EAAE,sBAACa,IAAD,EAAU;AACtBZ,oBAAAA,YAAY,CAAC,UAAD,CAAZ,CAAyBY,IAAzB;AACA1D,oBAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AATH;AADF,gBAFF,EAeGgD,MAAM,CAACzC,QAAP,IAAmB0C,OAAO,CAAC1C,QAA3B,GACC,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAEK,MAAM,CAAC+C,UAApB;AAAA,0BAAiCX,MAAM,CAACzC;AAAxC,gBADD,GAEG,IAjBN;AAAA,cAjCF,EAoDE,KAAC,MAAD;AACE,cAAA,KAAK,EAAE,OADT;AAEE,cAAA,YAAY,EAAE;AAAEqD,gBAAAA,KAAK,EAAE5E,MAAM,CAAC6E;AAAhB,eAFhB;AAGE,cAAA,OAAO,EAAEhE,OAHX;AAIE,cAAA,SAAS,EAAE;AAAEuD,gBAAAA,QAAQ,EAAE,EAAZ;AAAgBQ,gBAAAA,KAAK,EAAE;AAAvB,eAJb;AAKE,cAAA,KAAK,EAAEhD,MAAM,CAACkD,MALhB;AAME,cAAA,OAAO,EAAEf;AANX,cApDF,EA4DE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAE/B,gBAAAA,UAAU,EAAE,QAAd;AAAwB+C,gBAAAA,SAAS,EAAE;AAAnC,eAAb;AAAA,wBACE,MAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,aAAa,EAAE;AAAjB,iBAAb;AAAA,2BACE,KAAC,IAAD;AAAM,kBAAA,KAAK,EAAEpD,MAAM,CAACuC,KAApB;AAAA;AAAA,kBADF,EAEE,KAAC,gBAAD;AACE,kBAAA,OAAO,EAAE;AAAA,2BAAMhD,UAAU,CAACmC,QAAX,CAAoBhD,OAAO,CAAC2E,MAA5B,CAAN;AAAA,mBADX;AAAA,4BAGE,KAAC,IAAD;AAAM,oBAAA,KAAK,kCAAOrD,MAAM,CAACuC,KAAd;AAAqBe,sBAAAA,UAAU,EAAE;AAAjC,sBAAX;AAAA;AAAA;AAHF,kBAFF;AAAA;AADF,cA5DF;AAAA,YARD;AAAA;AA5CH,QAdF;AAAA;AALF,IADF;AAsJD,CAlKM;AAoKP,IAAMtD,MAAM,GAAGuD,UAAU,CAACC,MAAX,CAAkB;AAC/BvD,EAAAA,SAAS,EAAE;AACT2C,IAAAA,IAAI,EAAE,CADG;AAETa,IAAAA,eAAe,EAAErF,MAAM,CAAC6E;AAFf,GADoB;AAK/BX,EAAAA,aAAa,EAAE;AACboB,IAAAA,iBAAiB,EAAE;AADN,GALgB;AAQ/BnB,EAAAA,KAAK,EAAE;AACLoB,IAAAA,UAAU,EAAEtF,KAAK,CAACuF,gBADb;AAELpB,IAAAA,QAAQ,EAAE;AAFL,GARwB;AAY/BU,EAAAA,MAAM,EAAE;AACNW,IAAAA,WAAW,EAAEzF,MAAM,CAAC0F,SADd;AAENC,IAAAA,KAAK,EAAE,MAFD;AAGNN,IAAAA,eAAe,EAAErF,MAAM,CAAC0F,SAHlB;AAINzD,IAAAA,MAAM,EAAE,KAJF;AAKN2D,IAAAA,cAAc,EAAE1F,gBAAgB,CAAC,GAAD;AAL1B,GAZuB;AAmB/ByE,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG,GAnBmB;AAsB/BN,EAAAA,cAAc,EAAE;AACdD,IAAAA,YAAY,EAAE,IADA;AAEdU,IAAAA,SAAS,EAAE;AAFG,GAtBe;AA0B/BJ,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG,GA1BmB;AA6B/BL,EAAAA,KAAK,EAAE;AACLsB,IAAAA,iBAAiB,EAAE7F,MAAM,CAAC0F,SADrB;AAELjB,IAAAA,WAAW,EAAE,GAFR;AAGLxC,IAAAA,MAAM,EAAE/B,gBAAgB,CAAC,IAAD,CAHnB;AAILyF,IAAAA,KAAK,EAAE,MAJF;AAKLG,IAAAA,YAAY,EAAE,EALT;AAMLf,IAAAA,SAAS,EAAE,IANN;AAOLC,IAAAA,aAAa,EAAE,KAPV;AAQLe,IAAAA,aAAa,EAAE7F,gBAAgB,CAAC,GAAD,CAR1B;AASLoF,IAAAA,iBAAiB,EAAEpF,gBAAgB,CAAC,CAAD,CAT9B;AAULgC,IAAAA,cAAc,EAAE,eAVX;AAWLmC,IAAAA,YAAY,EAAE;AAXT;AA7BwB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Image,\n  Text,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { Colors, FONTS } from \"../theme\";\nimport { getScreenPercent, setUser } from \"../utils\";\nimport { Alert, Button } from \"../components\";\nimport { Screens } from \"../navigations\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { firebase } from \"../firebase\";\nimport GlassX from \"glassx\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport const Login = ({}) => {\n  const [loading, setLoading] = useState();\n  const [isError, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState();\n  const navigation = useNavigation();\n  const loginSchema = Yup.object().shape({\n    password: Yup.string()\n      .min(5, \"Enter minimum of 5 characters\")\n      .required(\"Password is required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  });\n\n  return (\n    <KeyboardAwareScrollView\n      contentContainerStyle={styles.container}\n      resetScrollToCoords={{ x: 0, y: 0 }}\n      scrollEnabled={false}\n    >\n      <SafeAreaView edges={[\"top\"]}>\n        <View\n          style={{\n            alignItems: \"center\",\n            height: \"35%\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Image\n            source={require(\"../assets/Logo-black.png\")}\n            resizeMode=\"contain\"\n            style={{ height: 80 }}\n          />\n        </View>\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          onSubmit={async (values, { resetForm }) => {\n            setLoading(true);\n            try {\n              const res = await firebase\n                .auth()\n                .signInWithEmailAndPassword(values.email, values.password);\n              const uid = res.user.uid;\n              const usersRef = firebase.firestore().collection(\"users\");\n              const doc = await usersRef.doc(uid).get();\n              const userData = doc.data();\n              GlassX.set({\n                step: userData.step,\n                displaySuccess: false,\n                user: userData,\n              });\n              await setUser(userData);\n              if (userData.status === \"inactive\")\n                navigation.navigate(Screens.APPLICATION);\n              if (userData.status === \"approved\")\n                navigation.navigate(Screens.HOME);\n              resetForm();\n              setLoading(false);\n            } catch (err) {\n              console.log(err);\n              setError(true);\n              const message =\n                err.code === \"auth/user-not-found\"\n                  ? \"ðŸ¥µ Account does not exist\"\n                  : err.code === \"auth/wrong-password\"\n                  ? \"ðŸ¥µ Your password is incorrect\"\n                  : \"ðŸ¥µ Somethin went wrong\";\n\n              setErrorMessage(message);\n              setLoading(false);\n            }\n            setLoading(false);\n          }}\n          validationSchema={loginSchema}\n        >\n          {({\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            errors,\n            values,\n            touched,\n          }) => (\n            <View style={styles.formContainer}>\n              <View style={{ alignItems: \"center\" }}>\n                <Text\n                  style={{\n                    ...styles.label,\n                    fontSize: getScreenPercent(10),\n                    marginBottom: \"8%\",\n                  }}\n                >\n                  Login\n                </Text>\n              </View>\n              {isError && <Alert text={errorMessage} type=\"error\" />}\n              <View style={styles.inputContainer}>\n                <Text style={styles.label}>Email</Text>\n                <View style={styles.input}>\n                  <TextInput\n                    style={{ flex: 1, borderWidth: 0 }}\n                    keyboardType={\"email-address\"}\n                    value={values.email}\n                    onBlur={handleBlur(\"email\")}\n                    autoCapitalize={\"none\"}\n                    textContentType=\"emailAddress\"\n                    onChangeText={(text) => {\n                      handleChange(\"email\")(text);\n                      setError(false);\n                    }}\n                  />\n                </View>\n                {errors.email && touched.email ? (\n                  <Text style={styles.errorStyle}>{errors.email}</Text>\n                ) : null}\n              </View>\n              <View style={styles.inputContainer}>\n                <Text style={styles.label}>Password</Text>\n                <View style={styles.input}>\n                  <TextInput\n                    style={{ flex: 1, borderWidth: 0 }}\n                    textContentType=\"password\"\n                    secureTextEntry={true}\n                    value={values.password}\n                    onBlur={handleBlur(\"password\")}\n                    onChangeText={(text) => {\n                      handleChange(\"password\")(text);\n                      setError(false);\n                    }}\n                  />\n                </View>\n                {errors.password && touched.password ? (\n                  <Text style={styles.errorStyle}>{errors.password}</Text>\n                ) : null}\n              </View>\n              <Button\n                title={\"Login\"}\n                spinnerStyle={{ color: Colors.PRIMARY }}\n                loading={loading}\n                textStyle={{ fontSize: 16, color: \"white\" }}\n                style={styles.button}\n                onPress={handleSubmit}\n              />\n              <View style={{ alignItems: \"center\", marginTop: \"5%\" }}>\n                <View style={{ flexDirection: \"row\" }}>\n                  <Text style={styles.label}>Dont have an account?</Text>\n                  <TouchableOpacity\n                    onPress={() => navigation.navigate(Screens.SIGNUP)}\n                  >\n                    <Text style={{ ...styles.label, marginLeft: 5 }}>\n                      Signup\n                    </Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            </View>\n          )}\n        </Formik>\n      </SafeAreaView>\n    </KeyboardAwareScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.PRIMARY,\n  },\n  formContainer: {\n    paddingHorizontal: \"8%\",\n  },\n  label: {\n    fontFamily: FONTS.WORK_SANS_MEDIUM,\n    fontSize: 16,\n  },\n  button: {\n    borderColor: Colors.SECONDARY,\n    width: \"100%\",\n    backgroundColor: Colors.SECONDARY,\n    height: \"14%\",\n    marginVertical: getScreenPercent(2.3),\n  },\n  errorStyle: {\n    color: \"red\",\n  },\n  inputContainer: {\n    marginBottom: \"2%\",\n    marginTop: \"1%\",\n  },\n  errorStyle: {\n    color: \"red\",\n  },\n  input: {\n    borderBottomColor: Colors.SECONDARY,\n    borderWidth: 1.5,\n    height: getScreenPercent(12.5),\n    width: \"100%\",\n    borderRadius: 10,\n    marginTop: \"2%\",\n    flexDirection: \"row\",\n    paddingBottom: getScreenPercent(0.4),\n    paddingHorizontal: getScreenPercent(4),\n    justifyContent: \"space-between\",\n    marginBottom: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}