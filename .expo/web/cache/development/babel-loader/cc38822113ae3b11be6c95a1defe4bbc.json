{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Colors, FONTS } from \"../theme\";\nimport { getScreenPercent } from \"../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Button = function Button(_ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      title = _ref.title,\n      onPress = _ref.onPress,\n      textStyle = _ref.textStyle,\n      loading = _ref.loading,\n      spinnerStyle = _ref.spinnerStyle;\n  var button = styles.button;\n  return _jsx(TouchableOpacity, {\n    onPress: onPress,\n    style: _objectSpread(_objectSpread({}, button), style),\n    disabled: loading,\n    children: loading ? _jsx(ActivityIndicator, {\n      size: spinnerStyle ? spinnerStyle.size : undefined,\n      color: spinnerStyle ? spinnerStyle.color : undefined\n    }) : title ? _jsx(Text, {\n      style: _objectSpread(_objectSpread({}, styles.buttonText), textStyle),\n      children: title\n    }) : children\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    height: 70,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    backgroundColor: Colors.PRIMARY\n  },\n  buttonText: {\n    color: Colors.SECONDARY,\n    fontFamily: FONTS.WORK_SANS_MEDIUM,\n    fontSize: getScreenPercent(5.1)\n  }\n});","map":{"version":3,"sources":["/Users/cosmos/Projects/lenda/components/Button.jsx"],"names":["React","Colors","FONTS","getScreenPercent","Button","children","style","title","onPress","textStyle","loading","spinnerStyle","button","styles","size","undefined","color","buttonText","StyleSheet","create","height","flexDirection","alignItems","justifyContent","borderRadius","backgroundColor","PRIMARY","SECONDARY","fontFamily","WORK_SANS_MEDIUM","fontSize"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAOA,SAASC,MAAT,EAAiBC,KAAjB;AACA,SAASC,gBAAT;;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAQhB;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,YACI,QADJA,YACI;AACJ,MAAQC,MAAR,GAAmBC,MAAnB,CAAQD,MAAR;AACA,SACE,KAAC,gBAAD;AACE,IAAA,OAAO,EAAEJ,OADX;AAEE,IAAA,KAAK,kCAAOI,MAAP,GAAkBN,KAAlB,CAFP;AAGE,IAAA,QAAQ,EAAEI,OAHZ;AAAA,cAKGA,OAAO,GACN,KAAC,iBAAD;AACE,MAAA,IAAI,EAAEC,YAAY,GAAGA,YAAY,CAACG,IAAhB,GAAuBC,SAD3C;AAEE,MAAA,KAAK,EAAEJ,YAAY,GAAGA,YAAY,CAACK,KAAhB,GAAwBD;AAF7C,MADM,GAKJR,KAAK,GACP,KAAC,IAAD;AAAM,MAAA,KAAK,kCAAOM,MAAM,CAACI,UAAd,GAA6BR,SAA7B,CAAX;AAAA,gBAAsDF;AAAtD,MADO,GAGPF;AAbJ,IADF;AAkBD,CA5BM;AA8BP,IAAMQ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,MAAM,EAAE;AACNQ,IAAAA,MAAM,EAAE,EADF;AAENC,IAAAA,aAAa,EAAE,KAFT;AAGNC,IAAAA,UAAU,EAAE,QAHN;AAINC,IAAAA,cAAc,EAAE,QAJV;AAKNC,IAAAA,YAAY,EAAE,EALR;AAMNC,IAAAA,eAAe,EAAExB,MAAM,CAACyB;AANlB,GADuB;AAS/BT,EAAAA,UAAU,EAAE;AACVD,IAAAA,KAAK,EAAEf,MAAM,CAAC0B,SADJ;AAEVC,IAAAA,UAAU,EAAE1B,KAAK,CAAC2B,gBAFR;AAGVC,IAAAA,QAAQ,EAAE3B,gBAAgB,CAAC,GAAD;AAHhB;AATmB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  Text,\n  ActivityIndicator,\n} from \"react-native\";\nimport { Colors, FONTS } from \"../theme\";\nimport { getScreenPercent } from \"../utils\";\n\nexport const Button = ({\n  children,\n  style,\n  title,\n  onPress,\n  textStyle,\n  loading,\n  spinnerStyle,\n}) => {\n  const { button } = styles;\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={{ ...button, ...style }}\n      disabled={loading}\n    >\n      {loading ? (\n        <ActivityIndicator\n          size={spinnerStyle ? spinnerStyle.size : undefined}\n          color={spinnerStyle ? spinnerStyle.color : undefined}\n        />\n      ) : title ? (\n        <Text style={{ ...styles.buttonText, ...textStyle }}>{title}</Text>\n      ) : (\n        children\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    height: 70,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    backgroundColor: Colors.PRIMARY,\n  },\n  buttonText: {\n    color: Colors.SECONDARY,\n    fontFamily: FONTS.WORK_SANS_MEDIUM,\n    fontSize: getScreenPercent(5.1),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}