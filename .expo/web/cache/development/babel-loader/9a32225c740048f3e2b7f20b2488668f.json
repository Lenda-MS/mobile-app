{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport { useStore } from \"glassx\";\nimport React, { useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { Colors } from \"../theme\";\nimport { AddressForm, IDForm } from \"../layouts\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Application = function Application(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useStore = useStore(\"step\"),\n      _useStore2 = _slicedToArray(_useStore, 2),\n      step = _useStore2[0],\n      setStep = _useStore2[1];\n\n  var _useStore3 = useStore(\"displaySuccess\"),\n      _useStore4 = _slicedToArray(_useStore3, 2),\n      _ = _useStore4[0],\n      setDisplaySuccess = _useStore4[1];\n\n  useEffect(function () {\n    return function () {\n      setStep(undefined);\n      setDisplaySuccess(false);\n    };\n  }, []);\n  return _jsx(KeyboardAwareScrollView, {\n    contentContainerStyle: styles.container,\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    scrollEnabled: false,\n    children: _jsx(SafeAreaView, {\n      edges: [\"top\"],\n      children: step === 1 ? _jsx(AddressForm, {\n        useStep: setStep\n      }) : _jsx(IDForm, {})\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.PRIMARY,\n    flex: 1,\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/cosmos/Projects/lenda/screens/Application.jsx"],"names":["useStore","React","useEffect","SafeAreaView","Colors","AddressForm","IDForm","KeyboardAwareScrollView","Application","step","setStep","_","setDisplaySuccess","undefined","styles","container","x","y","StyleSheet","create","backgroundColor","PRIMARY","flex","justifyContent"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,MAAT;AACA,SAASC,WAAT,EAAsBC,MAAtB;AACA,SAASC,uBAAT,QAAwC,yCAAxC;;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAQ;AAAA;;AACjC,kBAAwBR,QAAQ,CAAC,MAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA+BV,QAAQ,CAAC,gBAAD,CAAvC;AAAA;AAAA,MAAOW,CAAP;AAAA,MAAUC,iBAAV;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO,YAAM;AACXQ,MAAAA,OAAO,CAACG,SAAD,CAAP;AACAD,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,SACE,KAAC,uBAAD;AACE,IAAA,qBAAqB,EAAEE,MAAM,CAACC,SADhC;AAEE,IAAA,mBAAmB,EAAE;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAFvB;AAGE,IAAA,aAAa,EAAE,KAHjB;AAAA,cAKE,KAAC,YAAD;AAAc,MAAA,KAAK,EAAE,CAAC,KAAD,CAArB;AAAA,gBACGR,IAAI,KAAK,CAAT,GAAa,KAAC,WAAD;AAAa,QAAA,OAAO,EAAEC;AAAtB,QAAb,GAAiD,KAAC,MAAD;AADpD;AALF,IADF;AAWD,CAtBM;AAwBP,IAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,eAAe,EAAEhB,MAAM,CAACiB,OADf;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import { useStore } from \"glassx\";\nimport React, { useEffect } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { Colors } from \"../theme\";\nimport { AddressForm, IDForm } from \"../layouts\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\n\nexport const Application = ({}) => {\n  const [step, setStep] = useStore(\"step\");\n  const [_, setDisplaySuccess] = useStore(\"displaySuccess\");\n\n  useEffect(() => {\n    return () => {\n      setStep(undefined);\n      setDisplaySuccess(false);\n    };\n  }, []);\n\n  return (\n    <KeyboardAwareScrollView\n      contentContainerStyle={styles.container}\n      resetScrollToCoords={{ x: 0, y: 0 }}\n      scrollEnabled={false}\n    >\n      <SafeAreaView edges={[\"top\"]}>\n        {step === 1 ? <AddressForm useStep={setStep} /> : <IDForm />}\n      </SafeAreaView>\n    </KeyboardAwareScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.PRIMARY,\n    flex: 1,\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}